apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admin-role
rules:
  # Core API access
  - apiGroups: ["", "apps", "batch"]
    resources: ["pods", "services", "configmaps", "deployments", "statefulsets", "jobs"]
    verbs: ["get", "list", "watch", "update", "patch"]
  # Limited secret access
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["keycloak-admin-secret", "keycloak-postgresql-secret"]
    verbs: ["get", "watch"]
  # CSR access restricted to selfnodeclient
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/selfnodeclient"]
    verbs: ["get", "list"]
  # Networking policies
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies", "ingresses"]
    verbs: ["get", "list", "watch"]
  # Storage management
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-binding
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: default
roleRef:
  kind: ClusterRole
  name: admin-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: power-user
  namespace: default
rules:
  - apiGroups: ["", "apps"]
    resources: ["pods", "services", "configmaps", "deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-only
  namespace: default
rules:
  - apiGroups: ["", "apps"]
    resources: ["pods", "services", "configmaps", "deployments"]
    verbs: ["get", "list", "watch"]
